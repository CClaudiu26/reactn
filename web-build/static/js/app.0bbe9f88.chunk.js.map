{"version":3,"sources":["firebaje.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/CustomListItem.js","screens/HomeScreen.js","screens/AddChatScreen.js","screens/ChatScreen.js","App.js"],"names":["db","firebase","length","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","LoginScreen","navigation","useState","email","setEmail","password","setPassword","useEffect","onAuthStateChanged","authUser","replace","signIn","signInWithEmailAndPassword","catch","error","alert","KeyboardAvoidingView","behavior","style","styles","container","StatusBar","TouchableWithoutFeedback","onPress","Keyboard","dismiss","View","inputContainer","placeholder","autofocus","type","value","onChangeText","text","secureTextEntry","onSubmitEditing","containerStyle","button","title","navigate","height","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","width","marginTop","RegisterScreen","name","setName","imageUrl","setImageUrl","useLayoutEffect","setOptions","headerBackTitle","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","message","h3","marginBottom","raised","CustomListItem","id","chatName","enterChat","chatMessages","setChatMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","key","bottomDivider","rounded","source","uri","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","signOutUser","signOut","headerStyle","headerTitleStyle","color","headerTintStyle","headerLeft","marginLeft","TouchableOpacity","activeOpacity","currentUser","headerRight","flexDirection","marginRight","AntDesign","size","SimpleLineIcons","SafeAreaView","ScrollView","AddChatScreen","input","setInput","createChat","a","async","add","goBack","leftIcon","disabled","ChatScreen","route","messages","setMessages","headerTitleAlign","headerBackTitleVisible","headerTitle","Text","params","Ionicons","sendMessage","timestamp","FieldValue","serverTimestamp","Platform","OS","keyboardVerticalOffset","contentContainerStyle","paddingTop","reciever","position","bottom","right","recieverText","sender","left","senderText","senderName","footer","TextInput","textInput","borderRadius","alignSelf","maxWidth","margin","paddingRight","fontSize","Stack","createStackNavigator","globalScreenOptions","headerTintColor","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.0bbe9f88.chunk.js","sourcesContent":["\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCUBgkkJxVmQaw-jnVckmolrwGnl57tm5Q\",\n    authDomain: \"signal-clone-a03c8.firebaseapp.com\",\n    projectId: \"signal-clone-a03c8\",\n    storageBucket: \"signal-clone-a03c8.appspot.com\",\n    messagingSenderId: \"563597380135\",\n    appId: \"1:563597380135:web:bac5e9fc6ddb22f95c5c02\"\n  };\n\n\n\n  let app;\n\n  if (firebase.apps.length ===0){\n   app = firebase.initializeApp(firebaseConfig);\n  }else{\n    app = firebase.app();\n  }\n\n  const db = app.firestore();\n  const auth = firebase.auth();\n\n  export {db, auth};\n\n","import React , {useState, useLayoutEffect, useEffect} from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport {Button, Input, Image} from 'react-native-elements'\nimport {StatusBar} from 'expo-status-bar'\nimport {KeyboardAvoidingView } from 'react-native'\nimport {auth} from '../firebaje';\nimport { Keyboard } from 'react-native'\nimport { TouchableWithoutFeedback } from 'react-native'\n\n\n\n\n\nconst LoginScreen = ({navigation}) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged((authUser) => {\n            if (authUser){\n                navigation.replace('Home');\n            }\n        });\n\n        return unsubscribe;\n\n    }, []);\n\n\n\n    const signIn = () =>{\n        auth.signInWithEmailAndPassword(email, password).catch (error => alert(error));\n    };\n\n\n    return (\n        <KeyboardAvoidingView behavior = 'padding' style = {styles.container}>\n           \n            <StatusBar style = \"light\" />\n            <TouchableWithoutFeedback onPress = {Keyboard.dismiss}>\n         <>\n\n            <View  style = {styles.inputContainer}>\n                <Input placeholder = 'Email' autofocus \n                type = 'email' \n                value = {email} \n                onChangeText = {(text) => setEmail(text) } />\n\n\n\n                <Input placeholder = 'Password' secureTextEntry \n                type = 'password' \n                value = {password} \n                onChangeText = {(text) => setPassword(text) }\n                onSubmitEditing = {signIn} />\n                \n            </View>\n\n            <Button containerStyle = {styles.button} onPress = {signIn} title = \"Login\"/>\n            <Button onPress = { () => navigation.navigate ('Register')}containerStyle = {styles.button} type = \"outline\" title = \"Register\"/>\n            <View style = {{ height: 170}} />\n\n\n            </>\n\n            </TouchableWithoutFeedback>\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default LoginScreen\n\nconst styles = StyleSheet.create({\n\n    container: {\n        flex: 1,\n        alignItems : 'center',\n        justifyContent: 'center',\n        padding:10,\n        backgroundColor: 'white',\n\n\n\n    },\n\n    inputContainer: {\n        width:300,\n\n    },\n\n    button: {\n        width:200,\n        marginTop:10,\n\n    }\n});\n","import React ,{useLayoutEffect, useState} from 'react'\nimport { StatusBar } from 'react-native'\nimport { KeyboardAvoidingView } from 'react-native'\nimport { StyleSheet,  View } from 'react-native'\nimport {Button, Input ,Text} from 'react-native-elements'\nimport {auth} from '../firebaje';\nimport { Keyboard } from 'react-native'\nimport { TouchableWithoutFeedback } from 'react-native'\n\n\n\nconst RegisterScreen = ({navigation}) => {\n    const [name,setName] = useState('');\n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n    const [imageUrl,setImageUrl] = useState('');\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            headerBackTitle: 'Back to Login'\n        })\n    }, [navigation])\n\n    const register = () =>{\n            auth.createUserWithEmailAndPassword (email, password)\n            .then( (authUser) =>{\n                authUser.user.updateProfile({\n                    displayName: name,\n                    photoURL: imageUrl || 'https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png',\n\n                });\n            })\n            .catch(error => alert(error.message));\n    };\n\n    return (\n        <KeyboardAvoidingView behavior = \"padding\" style = {styles.container}>\n             \n            <StatusBar style = \"light\"/>\n\n            <Text h3 style = {{marginBottom: 50}}>\n                Create a Account\n            </Text>\n\n            <View style = {styles.inputContainer}>\n                <Input\n                placeholder = 'Full Name'\n                autofocus\n                type = 'text'\n                value = {name}\n                onChangeText = {text => setName(text)}\n\n                />\n\n                <Input\n                placeholder = 'Email'\n               \n                type = 'email'\n                value = {email}\n                onChangeText = {text => setEmail(text)}\n\n                />\n\n                <Input\n                placeholder = 'Password'\n                secureTextEntry\n                type = 'password'\n                value = {password}\n                onChangeText = {text => setPassword(text)}\n\n                />\n\n\n                <Input\n                placeholder = 'Profile Picture Url (Optional)'\n          \n                type = 'text'\n                value = {imageUrl}\n                onChangeText = {text => setImageUrl(text)}\n                onSubmitEditing = {register}\n\n                />\n\n\n            </View>\n\n            <Button \n                containerStyle = {styles.button}\n                raised\n                onPress = {register}\n                title = \"Register\"\n            />\n\n<View style = {{ height: 170}} />\n        </KeyboardAvoidingView>\n           \n        \n    )\n}\n\nexport default RegisterScreen\n\nconst styles = StyleSheet.create({\n    container:{\n        flex:1,\n        alignItems : 'center',\n        justifyContent: 'center',\n        padding:10,\n        backgroundColor: 'white',\n\n    },\n\n    button:{\n        width:200,\n        marginTop: 10,\n    },\n\n    inputContainer: {\n        width:300\n    },\n\n})\n","import React, {useEffect, useState} from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport {ListItem, Avatar} from 'react-native-elements'\nimport {db} from '../firebaje'\n\n\nconst CustomListItem = ({id, chatName, enterChat}) => {\n    const [chatMessages, setChatMessages] = useState([]);\n\n    useEffect(() => {\n        const unsubscribe = db.collection('chats').doc(id).collection('messages').orderBy('timestamp', 'desc').\n        onSnapshot((snapshot) => (\n            setChatMessages (snapshot.docs.map ((doc) => doc.data()))\n        ));\n\n        return unsubscribe;\n    }, []);\n\n\n\n    return (\n       \n          \n        <ListItem key = {id} onPress = {() => enterChat(id, chatName)}  key = {id} bottomDivider>\n                  <Avatar \n                  rounded\n                  source = {{\n                      uri: chatMessages?.[0]?.photoURL || 'https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png',\n                  }}\n                  />\n\n                  <ListItem.Content>\n\n                      <ListItem.Title style = {{ fontWeight: '800' }}>\n                        {chatName}\n                      </ListItem.Title>\n\n                      <ListItem.Subtitle numberOfLines = {1} ellipsizeMode =\"tail\">\n                          {chatMessages?.[0]?.displayName} : {chatMessages?.[0]?.message}\n\n                      </ListItem.Subtitle>\n\n\n                  </ListItem.Content>\n        </ListItem>\n    )\n}\n\nexport default CustomListItem\n\nconst styles = StyleSheet.create({})\n","import React, { useLayoutEffect,useState , useEffect} from 'react'\nimport { StyleSheet,ScrollView  , Text, View, TouchableOpacity} from 'react-native'\nimport {SafeAreaView} from 'react-native'\nimport {Avatar} from 'react-native-elements'\nimport {AntDesign, SimpleLineIcons} from '@expo/vector-icons'\nimport CustomListItem from '../components/CustomListItem'\nimport {auth, db} from '../firebaje'\n\n\n\nconst HomeScreen = ({navigation}) => {\n\n    const [chats, setChats] = useState([]);\n\n    const signOutUser = () => {\n        auth.signOut()\n        .then (() => {\n            navigation.replace ('Login')\n        });\n    };\n\n\n    useEffect(() => {\n        const unsubscribe = db.collection('chats').onSnapshot(snapshot =>(\n            setChats(snapshot.docs.map(doc => ({\n                id: doc.id,\n                data: doc.data()\n            }))) \n        )\n        );\n        return unsubscribe; \n    }, [])\n\n    useLayoutEffect(() => {\n            navigation.setOptions({\n                title: 'ClauApp',\n                headerStyle : {backgroundColor : \"#fff\"},\n                headerTitleStyle : {color : \"black\"},\n                headerTintStyle: \"black\",\n                headerLeft: () => (<View style = {{marginLeft: 20}}>\n                    <TouchableOpacity onPress = {signOutUser} activeOpacity = {0.5}>\n                    <Avatar rounded\n                    source = {{ uri: auth?.currentUser?.photoURL}} \n                    />\n                     </TouchableOpacity>\n                </View>\n\n                ),\n                headerRight: () => (\n                        <View style ={{ \n                            flexDirection: 'row',\n                            justifyContent: 'space-between',\n                            width: 80,\n                            marginRight: 20,\n                        }} >\n                            <TouchableOpacity activeOpacity = {0.5}>\n                                <AntDesign name = 'camerao' size = {24} color = 'black' />\n                            </TouchableOpacity>\n\n                            <TouchableOpacity onPress = {() => navigation.navigate ('AddChat')} activeOpacity = {0.5}>\n                                <SimpleLineIcons name = 'pencil' size = {24} color = 'black' />\n                            </TouchableOpacity>\n                        </View>\n                )\n            });\n    }, [])\n\n    const enterChat = (id ,chatName ) =>{\n        navigation.navigate ( 'Chat', {\n            id,\n            chatName,\n        })\n    }\n\n    return (\n        <SafeAreaView>\n            <ScrollView style = {styles.container}>    \n                {chats.map (({id, data: {chatName}}) => (\n                        <CustomListItem key = {id} id = {id} chatName = {chatName} enterChat = {enterChat}/>\n                ))}\n            \n            </ScrollView>\n        </SafeAreaView>\n    )\n}\n\nexport default HomeScreen\n\nconst styles = StyleSheet.create({\n    container :{\n        height: '100%',\n    }\n})\n","import React, {useLayoutEffect, useState} from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport {Button, Input} from 'react-native-elements'\nimport Icon from 'react-native-vector-icons/FontAwesome'\nimport {db} from '../firebaje'\n\nconst AddChatScreen = ({navigation}) => {\n\n    const [input, setInput ] = useState('');\n\n    useLayoutEffect(() => {\n       navigation.setOptions({\n            title: 'Add a new chat',\n            headerBackTitle: 'Chats',\n\n       })\n    }, [navigation])\n\n    const createChat = async () =>{\n        await db.collection('chats').add({\n            chatName:input\n        }).then(() => {\n            navigation.goBack()\n        }).catch(error => alert(error))\n    }\n\n\n    return (\n        <View style = {styles.container}>\n            <Input placeholder = 'Enter a chat name'  \n            value = {input} \n            onChangeText = {(text) => setInput(text)}\n            onSubmitEditing = {createChat}\n            leftIcon = {\n                <Icon name = \"wechat\" type = \"antdesign\" size = {24} color = 'black'/>\n            }/>\n\n            <Button  disabled = {!input} onPress = {createChat}\n            title = 'Create new Chat'/>\n        </View>\n    )\n}\n\nexport default AddChatScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        padding:30,\n        height: '100%',\n\n    }\n})\n","import React, { useLayoutEffect ,useState} from 'react'\nimport { StyleSheet, Text, View,TouchableOpacity, SafeAreaView } from 'react-native'\nimport {Avatar} from 'react-native-elements'\nimport {AntDesign, SimpleLineIcons, FontAwesome, Ionicons} from '@expo/vector-icons'\nimport { StatusBar } from 'react-native'\nimport { KeyboardAvoidingView } from 'react-native'\nimport { Platform } from 'react-native'\nimport { ScrollView, TextInput } from 'react-native'\nimport { Keyboard } from 'react-native'\nimport { TouchableWithoutFeedback } from 'react-native'\nimport { db ,auth} from '../firebaje'\nimport * as firebase from 'firebase';\n\nconst ChatScreen = ({navigation, route}) => {\n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n    useLayoutEffect(() => {\n        navigation.setOptions ({\n            title: 'Chat',\n            headerTitleAlign: 'left',\n            headerBackTitleVisible: false,\n            headerTitle: () =>(\n                <View style = {{ alignItems : 'center', flexDirection : 'row'}}>\n                    <Avatar rounded \n                    source = {{uri: 'https://cencup.com/wp-content/uploads/2019/07/avatar-placeholder.png'}}/>\n                    <Text style = {{color: 'white', marginLeft: 10, fontWeight: '700'}}>{route.params.chatName}</Text>\n                </View>\n            ),\n\n            headerLeft: () =>(\n                <TouchableOpacity style = {{marginLeft: 10}} onPress = {navigation.goBack}>\n\n                  <AntDesign name = \"arrowleft\" size = {24} color = 'white'/>\n                </TouchableOpacity>\n            ),\n\n            headerRight : () => (\n                <View \n                style = {{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    width: 80,\n                    marginRight:20,\n                }}>\n                    <TouchableOpacity>\n                        <FontAwesome name = \"video-camera\" size = {24} color = 'white'/>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity>\n                        <Ionicons name = \"call\" size = {24} color = \"white\"/>\n                    </TouchableOpacity>\n                </View>\n            )\n\n            \n\n        })\n    }, [navigation]);\n\n\n    const sendMessage = () =>{\n        Keyboard.dismiss();\n\n        db.collection('chats').doc(route.params.id).collection('messages').add({\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n            message: input,\n            displayName: auth.currentUser.displayName,\n            email: auth.currentUser.email,\n            photoURL: auth.currentUser.photoURL\n        });\n\n        setInput('');\n    }\n\n\n    useLayoutEffect(() => {\n            const unsubscribe = db.collection('chats').doc(route.params.id).collection('messages').orderBy ('timestamp', 'desc')\n            .onSnapshot((snapshot) => setMessages (\n                snapshot.docs.map (doc => ({\n                    id: doc.id,\n                    data: doc.data(),\n                }))\n            ));\n\n            return unsubscribe;\n    }, [route]);\n\n\n    return (\n        <SafeAreaView style = {{flex: 1, backgroundColor: 'white'}}>\n            <StatusBar style = \"light\" />\n            <KeyboardAvoidingView\n            behavior = {Platform.OS  === 'ios' ? 'padding' : 'height'}\n            style = {styles.container}\n            keyboardVerticalOffset = {90}>\n\n                <TouchableWithoutFeedback onPress = {Keyboard.dismiss}>\n                <>\n\n                <ScrollView contentContainerStyle ={{paddingTop: 15}}>\n                    {messages.map(({id,data}) => (\n                        data.email === auth.currentUser.email ? (\n                            <View key = {id} style = {styles.reciever}>\n                                <Avatar \n                                    position = \"absolute\"\n                                    containerStyle ={{\n                                        position: 'absolute',\n                                        bottom: -15,\n                                        right: -5,\n                                    }}\n                                    size= {30}\n                                    rounded\n                                    bottom = {-15}\n                                    right = {-5}\n                                source = {{uri: data.photoURL}}/>\n                                <Text style = {styles.recieverText}>{data.message} </Text>\n                            </View>\n\n                        ) : (\n\n                            <View  style = {styles.sender}>\n\n                                <Avatar \n                                    position = \"absolute\"\n                                    containerStyle ={{\n                                        position: 'absolute',\n                                        bottom: -15,\n                                        left: -5,\n                                    }}\n                                    size= {30}\n                                    rounded\n                                    bottom = {-15}\n                                    left = {-5}\n                                source = {{uri: data.photoURL}}/>\n                                <Text style = {styles.senderText}>{data.message} </Text>\n                                <Text style = {styles.senderName}>{data.displayName} </Text>\n                            </View>\n                        )\n                    ) )}\n\n\n                </ScrollView>\n\n                <View style = {styles.footer}>\n                    <TextInput value = {input} onSubmitEditing = {sendMessage} onChangeText = {(text) => setInput(text)} placeholder = \"Message\" style = {styles.textInput} />\n                    <TouchableOpacity onPress = {sendMessage} activeOpacity = {0.5}>\n                        <Ionicons name = \"send\" size = {24} color = '#2B68E6' />\n                    </TouchableOpacity>\n                </View>\n\n                </>\n\n                </TouchableWithoutFeedback>\n\n            </KeyboardAvoidingView>\n        </SafeAreaView>\n    )\n}\n\nexport default ChatScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n\n    },\n    \n    footer: {\n        flexDirection : 'row',\n        alignItems: 'center',\n        width: '100%',\n        padding: 15,\n    },\n\n    textInput:{\n        bottom: 0,\n        height: 40,\n        flex:1,\n        marginRight: 15,\n        \n        backgroundColor: '#ECECEC',\n       \n        padding:10,\n        color: 'grey',\n        borderRadius: 30,\n\n    },\n\n    reciever: {\n        padding:15,\n        backgroundColor: '#ECECEC',\n        alignSelf: 'flex-end',\n        borderRadius: 20,\n        marginRight: 15,\n        marginBottom: 20,\n        maxWidth: '80%',\n        position: 'relative',\n        \n    },\n\n    sender:{\n        padding:15,\n        backgroundColor: '#2B68E6',\n        alignSelf: 'flex-start',\n        borderRadius: 20,\n        margin: 15,\n        \n        maxWidth: '80%',\n        position: 'relative',\n    },\n\n    senderText: {\n        color:'white',\n        fontWeight: '500',\n        marginLeft: 10,\n        marginBottom: 15,\n\n\n    },\n\n    senderName: {\n        left:10,\n        paddingRight:10,\n        fontSize:10,\n        color:'white',\n    },\n\n    recieverText: {\n        color: 'black',\n        fontWeight: '500',\n        marginLeft:10,\n    }\n})\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport LoginScreen from './screens/LoginScreen';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport  RegisterScreen  from './screens/RegisterScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport AddChatScreen from './screens/AddChatScreen'\nimport ChatScreen from './screens/ChatScreen'\n\nconst Stack = createStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle: {backgroundColor: '#2C6BED' },\n  headerTitleStyle: {color: 'white'},\n  headerTintColor: 'white',\n}\n\n\nexport default function App() {\n\n\n  return (\n\n    <NavigationContainer>\n\n      <Stack.Navigator \n      //initialRouteName = \"Home\" \n      screenOptions = {globalScreenOptions}>\n      <Stack.Screen    name = \"Login\" component = {LoginScreen} />\n      <Stack.Screen    name = \"Register\" component = { RegisterScreen }  />\n      <Stack.Screen    name = \"Home\" component = { HomeScreen }  />\n      <Stack.Screen    name = \"AddChat\" component = { AddChatScreen }  />\n      <Stack.Screen    name = \"Chat\" component = { ChatScreen }  />\n      </Stack.Navigator>\n\n      \n\n\n    </NavigationContainer>\n  );\n\n    \n \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"sourceRoot":""}